#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAXLINE 100

int main(int argc, char* argv[]){
	if (argc < 2)
	{
		printf("명령행 인자는 2개 이상이 되어야 합니다");
		return 0;
	}

	FILE *infile;
	if ((infile = fopen(argv[1], "w")) == NULL)
	{
		printf("읽을 파일이 없습니다");
		exit(1);
	}

	//출력 파일의 이름을 .rev로 설정
	char foutname[100];
	strcpy(foutname, argv[1]);
	for (int i = 0; i < strlen(foutname); i++){
		if (foutname[i] == '.')
		{
			foutname[i + 1] = 'r';
			foutname[i + 2] = 'e';
			foutname[i + 3] = 'v';
			foutname[i + 4] = '\0';
			break;
		}
	}

	FILE *outfile = fopen(foutname, "w");

	int linecnt = 0, wordcnt = 0, charcnt = 0;
	char str[MAXLINE + 1];

	fgets(str, MAXLINE, infile);

	char *deli = " ,.";
	char *ptoken;

	int linenum = 0;
	while (!feof(infile))
	{
		//줄 수 카운트
		linecnt++;

		//단어 개수 카운트
		ptoken = strtok(str, deli);
		while (ptoken != NULL)
		{
			++wordcnt;
			ptoken = strtok(NULL, deli);
		}

		
		//소문자는 대문자로, 대문자는 소문자로 변경
		for (int i = 0; i < strlen(str); i++)
		{
			if (str[i] >= 'A' && str[i] <= 'Z')
			{
				++charcnt;
				str[i] += 32;
			}
			else if (str[i] >= 'a' && str[i] <= 'z')
			{
				++charcnt;
				str[i] -= 32;
			}

		}

		//outfile에 줄번호와 문자열 출력
		fprintf(outfile, "%d ", ++linenum);
		fputs(str, outfile);

		fgets(str, MAXLINE, infile);
	}


	printf("<Count Result>\n");
	printf("Line Count:\t\t %d", linecnt);
	printf("Word count:\t\t %d", wordcnt);
	printf("Character count\t %d", charcnt);
	printf("File saved int %s", outfile);

	return 0;

}
